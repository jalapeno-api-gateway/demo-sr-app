// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: pushservice.proto

package pushservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LsNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Asn      int32  `protobuf:"varint,3,opt,name=asn,proto3" json:"asn,omitempty"`
	RouterIp string `protobuf:"bytes,4,opt,name=router_ip,json=routerIp,proto3" json:"router_ip,omitempty"`
}

func (x *LsNode) Reset() {
	*x = LsNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pushservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LsNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LsNode) ProtoMessage() {}

func (x *LsNode) ProtoReflect() protoreflect.Message {
	mi := &file_pushservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LsNode.ProtoReflect.Descriptor instead.
func (*LsNode) Descriptor() ([]byte, []int) {
	return file_pushservice_proto_rawDescGZIP(), []int{0}
}

func (x *LsNode) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LsNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LsNode) GetAsn() int32 {
	if x != nil {
		return x.Asn
	}
	return 0
}

func (x *LsNode) GetRouterIp() string {
	if x != nil {
		return x.RouterIp
	}
	return ""
}

type LsNodeSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *LsNodeSubscription) Reset() {
	*x = LsNodeSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pushservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LsNodeSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LsNodeSubscription) ProtoMessage() {}

func (x *LsNodeSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_pushservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LsNodeSubscription.ProtoReflect.Descriptor instead.
func (*LsNodeSubscription) Descriptor() ([]byte, []int) {
	return file_pushservice_proto_rawDescGZIP(), []int{1}
}

func (x *LsNodeSubscription) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type LsNodeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string  `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Key    string  `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	LsNode *LsNode `protobuf:"bytes,3,opt,name=lsNode,proto3" json:"lsNode,omitempty"`
}

func (x *LsNodeEvent) Reset() {
	*x = LsNodeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pushservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LsNodeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LsNodeEvent) ProtoMessage() {}

func (x *LsNodeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pushservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LsNodeEvent.ProtoReflect.Descriptor instead.
func (*LsNodeEvent) Descriptor() ([]byte, []int) {
	return file_pushservice_proto_rawDescGZIP(), []int{2}
}

func (x *LsNodeEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *LsNodeEvent) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LsNodeEvent) GetLsNode() *LsNode {
	if x != nil {
		return x.LsNode
	}
	return nil
}

type LsLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key          string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	RouterIp     string `protobuf:"bytes,2,opt,name=router_ip,json=routerIp,proto3" json:"router_ip,omitempty"`
	PeerIp       string `protobuf:"bytes,3,opt,name=peer_ip,json=peerIp,proto3" json:"peer_ip,omitempty"`
	LocalLinkIp  string `protobuf:"bytes,4,opt,name=localLink_ip,json=localLinkIp,proto3" json:"localLink_ip,omitempty"`
	RemoteLinkIp string `protobuf:"bytes,5,opt,name=remoteLink_ip,json=remoteLinkIp,proto3" json:"remoteLink_ip,omitempty"`
	IgpMetric    int32  `protobuf:"varint,6,opt,name=igp_metric,json=igpMetric,proto3" json:"igp_metric,omitempty"`
}

func (x *LsLink) Reset() {
	*x = LsLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pushservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LsLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LsLink) ProtoMessage() {}

func (x *LsLink) ProtoReflect() protoreflect.Message {
	mi := &file_pushservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LsLink.ProtoReflect.Descriptor instead.
func (*LsLink) Descriptor() ([]byte, []int) {
	return file_pushservice_proto_rawDescGZIP(), []int{3}
}

func (x *LsLink) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LsLink) GetRouterIp() string {
	if x != nil {
		return x.RouterIp
	}
	return ""
}

func (x *LsLink) GetPeerIp() string {
	if x != nil {
		return x.PeerIp
	}
	return ""
}

func (x *LsLink) GetLocalLinkIp() string {
	if x != nil {
		return x.LocalLinkIp
	}
	return ""
}

func (x *LsLink) GetRemoteLinkIp() string {
	if x != nil {
		return x.RemoteLinkIp
	}
	return ""
}

func (x *LsLink) GetIgpMetric() int32 {
	if x != nil {
		return x.IgpMetric
	}
	return 0
}

type LsLinkSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *LsLinkSubscription) Reset() {
	*x = LsLinkSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pushservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LsLinkSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LsLinkSubscription) ProtoMessage() {}

func (x *LsLinkSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_pushservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LsLinkSubscription.ProtoReflect.Descriptor instead.
func (*LsLinkSubscription) Descriptor() ([]byte, []int) {
	return file_pushservice_proto_rawDescGZIP(), []int{4}
}

func (x *LsLinkSubscription) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type LsLinkEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string  `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Key    string  `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	LsLink *LsLink `protobuf:"bytes,3,opt,name=lsLink,proto3" json:"lsLink,omitempty"`
}

func (x *LsLinkEvent) Reset() {
	*x = LsLinkEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pushservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LsLinkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LsLinkEvent) ProtoMessage() {}

func (x *LsLinkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pushservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LsLinkEvent.ProtoReflect.Descriptor instead.
func (*LsLinkEvent) Descriptor() ([]byte, []int) {
	return file_pushservice_proto_rawDescGZIP(), []int{5}
}

func (x *LsLinkEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *LsLinkEvent) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LsLinkEvent) GetLsLink() *LsLink {
	if x != nil {
		return x.LsLink
	}
	return nil
}

type TelemetrySubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipv4Addresses []string `protobuf:"bytes,1,rep,name=ipv4addresses,proto3" json:"ipv4addresses,omitempty"`
	PropertyNames []string `protobuf:"bytes,2,rep,name=propertyNames,proto3" json:"propertyNames,omitempty"`
}

func (x *TelemetrySubscription) Reset() {
	*x = TelemetrySubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pushservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelemetrySubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetrySubscription) ProtoMessage() {}

func (x *TelemetrySubscription) ProtoReflect() protoreflect.Message {
	mi := &file_pushservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetrySubscription.ProtoReflect.Descriptor instead.
func (*TelemetrySubscription) Descriptor() ([]byte, []int) {
	return file_pushservice_proto_rawDescGZIP(), []int{6}
}

func (x *TelemetrySubscription) GetIpv4Addresses() []string {
	if x != nil {
		return x.Ipv4Addresses
	}
	return nil
}

func (x *TelemetrySubscription) GetPropertyNames() []string {
	if x != nil {
		return x.PropertyNames
	}
	return nil
}

type TelemetryEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipv4Address string           `protobuf:"bytes,1,opt,name=ipv4address,proto3" json:"ipv4address,omitempty"`
	Data        []*TelemetryData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *TelemetryEvent) Reset() {
	*x = TelemetryEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pushservice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelemetryEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryEvent) ProtoMessage() {}

func (x *TelemetryEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pushservice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryEvent.ProtoReflect.Descriptor instead.
func (*TelemetryEvent) Descriptor() ([]byte, []int) {
	return file_pushservice_proto_rawDescGZIP(), []int{7}
}

func (x *TelemetryEvent) GetIpv4Address() string {
	if x != nil {
		return x.Ipv4Address
	}
	return ""
}

func (x *TelemetryEvent) GetData() []*TelemetryData {
	if x != nil {
		return x.Data
	}
	return nil
}

type TelemetryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyName string `protobuf:"bytes,1,opt,name=propertyName,proto3" json:"propertyName,omitempty"`
	Value        []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TelemetryData) Reset() {
	*x = TelemetryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pushservice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelemetryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryData) ProtoMessage() {}

func (x *TelemetryData) ProtoReflect() protoreflect.Message {
	mi := &file_pushservice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryData.ProtoReflect.Descriptor instead.
func (*TelemetryData) Descriptor() ([]byte, []int) {
	return file_pushservice_proto_rawDescGZIP(), []int{8}
}

func (x *TelemetryData) GetPropertyName() string {
	if x != nil {
		return x.PropertyName
	}
	return ""
}

func (x *TelemetryData) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type DataRateSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipv4Address string `protobuf:"bytes,1,opt,name=ipv4address,proto3" json:"ipv4address,omitempty"`
}

func (x *DataRateSubscription) Reset() {
	*x = DataRateSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pushservice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataRateSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataRateSubscription) ProtoMessage() {}

func (x *DataRateSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_pushservice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataRateSubscription.ProtoReflect.Descriptor instead.
func (*DataRateSubscription) Descriptor() ([]byte, []int) {
	return file_pushservice_proto_rawDescGZIP(), []int{9}
}

func (x *DataRateSubscription) GetIpv4Address() string {
	if x != nil {
		return x.Ipv4Address
	}
	return ""
}

type DataRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataRate int64 `protobuf:"varint,1,opt,name=dataRate,proto3" json:"dataRate,omitempty"`
}

func (x *DataRate) Reset() {
	*x = DataRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pushservice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataRate) ProtoMessage() {}

func (x *DataRate) ProtoReflect() protoreflect.Message {
	mi := &file_pushservice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataRate.ProtoReflect.Descriptor instead.
func (*DataRate) Descriptor() ([]byte, []int) {
	return file_pushservice_proto_rawDescGZIP(), []int{10}
}

func (x *DataRate) GetDataRate() int64 {
	if x != nil {
		return x.DataRate
	}
	return 0
}

var File_pushservice_proto protoreflect.FileDescriptor

var file_pushservice_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x75, 0x73, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x75, 0x73, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x5d, 0x0a, 0x06, 0x4c, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61,
	0x73, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x70, 0x22,
	0x28, 0x0a, 0x12, 0x4c, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x64, 0x0a, 0x0b, 0x4c, 0x73, 0x4e,
	0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x6c, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x6c, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x22,
	0xb7, 0x01, 0x0a, 0x06, 0x4c, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72,
	0x49, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x5f,
	0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4c,
	0x69, 0x6e, 0x6b, 0x49, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x67,
	0x70, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x69, 0x67, 0x70, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x22, 0x28, 0x0a, 0x12, 0x4c, 0x73, 0x4c,
	0x69, 0x6e, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x22, 0x64, 0x0a, 0x0b, 0x4c, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x06,
	0x6c, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x75, 0x73, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x73, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x06, 0x6c, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x63, 0x0a, 0x15, 0x54, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x70, 0x76, 0x34, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x70, 0x76, 0x34, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x62,
	0x0a, 0x0e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x70, 0x76, 0x34, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x70, 0x76, 0x34, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x49, 0x0a, 0x0d, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a,
	0x14, 0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x70, 0x76, 0x34, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x70, 0x76, 0x34,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x26, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x32,
	0xed, 0x02, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x53, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x4c, 0x73,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4c, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x54, 0x6f, 0x4c, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x75, 0x73,
	0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x70, 0x75,
	0x73, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x73, 0x4c, 0x69, 0x6e, 0x6b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5f, 0x0a, 0x18, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1b, 0x2e, 0x70, 0x75, 0x73, 0x68,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x13, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x15, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42,
	0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x68,
	0x2f, 0x69, 0x6e, 0x73, 0x2f, 0x6a, 0x61, 0x6c, 0x61, 0x70, 0x65, 0x6e, 0x6f, 0x2d, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pushservice_proto_rawDescOnce sync.Once
	file_pushservice_proto_rawDescData = file_pushservice_proto_rawDesc
)

func file_pushservice_proto_rawDescGZIP() []byte {
	file_pushservice_proto_rawDescOnce.Do(func() {
		file_pushservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_pushservice_proto_rawDescData)
	})
	return file_pushservice_proto_rawDescData
}

var file_pushservice_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_pushservice_proto_goTypes = []interface{}{
	(*LsNode)(nil),                // 0: pushservice.LsNode
	(*LsNodeSubscription)(nil),    // 1: pushservice.LsNodeSubscription
	(*LsNodeEvent)(nil),           // 2: pushservice.LsNodeEvent
	(*LsLink)(nil),                // 3: pushservice.LsLink
	(*LsLinkSubscription)(nil),    // 4: pushservice.LsLinkSubscription
	(*LsLinkEvent)(nil),           // 5: pushservice.LsLinkEvent
	(*TelemetrySubscription)(nil), // 6: pushservice.TelemetrySubscription
	(*TelemetryEvent)(nil),        // 7: pushservice.TelemetryEvent
	(*TelemetryData)(nil),         // 8: pushservice.TelemetryData
	(*DataRateSubscription)(nil),  // 9: pushservice.DataRateSubscription
	(*DataRate)(nil),              // 10: pushservice.DataRate
}
var file_pushservice_proto_depIdxs = []int32{
	0,  // 0: pushservice.LsNodeEvent.lsNode:type_name -> pushservice.LsNode
	3,  // 1: pushservice.LsLinkEvent.lsLink:type_name -> pushservice.LsLink
	8,  // 2: pushservice.TelemetryEvent.data:type_name -> pushservice.TelemetryData
	1,  // 3: pushservice.PushService.SubscribeToLsNodes:input_type -> pushservice.LsNodeSubscription
	4,  // 4: pushservice.PushService.SubscribeToLsLinks:input_type -> pushservice.LsLinkSubscription
	6,  // 5: pushservice.PushService.SubscribeToTelemetryData:input_type -> pushservice.TelemetrySubscription
	9,  // 6: pushservice.PushService.SubscribeToDataRate:input_type -> pushservice.DataRateSubscription
	2,  // 7: pushservice.PushService.SubscribeToLsNodes:output_type -> pushservice.LsNodeEvent
	5,  // 8: pushservice.PushService.SubscribeToLsLinks:output_type -> pushservice.LsLinkEvent
	7,  // 9: pushservice.PushService.SubscribeToTelemetryData:output_type -> pushservice.TelemetryEvent
	10, // 10: pushservice.PushService.SubscribeToDataRate:output_type -> pushservice.DataRate
	7,  // [7:11] is the sub-list for method output_type
	3,  // [3:7] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_pushservice_proto_init() }
func file_pushservice_proto_init() {
	if File_pushservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pushservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LsNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pushservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LsNodeSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pushservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LsNodeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pushservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LsLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pushservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LsLinkSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pushservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LsLinkEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pushservice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelemetrySubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pushservice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelemetryEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pushservice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelemetryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pushservice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataRateSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pushservice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pushservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pushservice_proto_goTypes,
		DependencyIndexes: file_pushservice_proto_depIdxs,
		MessageInfos:      file_pushservice_proto_msgTypes,
	}.Build()
	File_pushservice_proto = out.File
	file_pushservice_proto_rawDesc = nil
	file_pushservice_proto_goTypes = nil
	file_pushservice_proto_depIdxs = nil
}
